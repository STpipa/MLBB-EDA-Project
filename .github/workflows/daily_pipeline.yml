name: Daily MLBB Data Pipeline

on:
  schedule:
    - cron: '0 0 * * *'
  # Permite ejecutar el workflow manualmente desde la interfaz de GitHub
  workflow_dispatch:

# 🚨 BLOQUE DE PERMISOS CRÍTICO 🚨
permissions:
  contents: write # ¡Esto le da permiso al bot para hacer push!

jobs:
  run_pipeline:
    runs-on: ubuntu-latest # Usa una máquina virtual de Linux
    
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Asegúrate de usar la versión correcta 

      - name: Instalar dependencias
        
        run: pip install -r requirements.txt

        # 🚨 Configurar PYTHONPATH 🚨
      - name: Set PYTHONPATH
        # Esto añade el directorio actual (la raíz del proyecto) al PYTHONPATH
        # para que Python pueda encontrar 'src' al usar 'from src.module import...'
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: 🚀 Ejecutar el Pipeline Diario
        # Asumiendo que pipeline_daily.py está en la raíz o en src/
        run: python src/pipeline_daily.py

        # 🚨 Commit Temporal de Archivos Generados 🚨
      - name: Commit local de archivos generados
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions Bot"
          # Añade los archivos que tu pipeline acaba de crear/modificar
          git add data/*.csv reports/*.txt reports/*.png
          # Intenta el commit. '|| true' asegura que el job no falle si no hay cambios.
          git commit -m "Temp commit de datos generados para pull" || true

      - name: 🔄 Pull de cambios remotos
        # Descarga y fusiona los cambios previos (los del bot anterior)
        run: git pull origin main

      - name: 💾 Commit y Push de los datos actualizados
        # Necesario para que el Streamlit Cloud Dashboard acceda a los archivos actualizados
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '🤖 ETL: Datos y reportes actualizados (Job Diario)'
          # Los archivos que generas y deben ser subidos
          file_pattern: 'data/*.csv reports/*.txt reports/*.png'
          commit_author: STpipa <114825531+STpipa@users.noreply.github.com>